version: '3.8'

services:

  # api_manager:
  #     image: wso2/wso2am:4.0.0
  #     container_name: api_manager
  #     ports:
  #       - "8280:8280"
  #       - "8243:8243"
  #       - "9443:9443"
  #     volumes:
  #       - aa:/home/wso2carbon/wso2am-4.0.0/repository/*

  kafka:
    image: docker.io/bitnami/kafka:3.4
    ports:
      - "9092:9092"
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      # - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
    healthcheck:
          test: ["CMD", "kafka-topics.sh", "--bootstrap-server", "localhost:9092", "--list"]
          interval: 10s
          timeout: 10s
          retries: 5
  
  kafka2:
    image: docker.io/bitnami/kafka:3.4
    ports:
      - "9093:9092"
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092,
    healthcheck:
          test: ["CMD", "kafka-topics.sh", "--bootstrap-server", "localhost:9092", "--list"]
          interval: 10s
          timeout: 10s
          retries: 5

  # routerapp:
  #   container_name: routerApp
  #   build:
  #     context: .
  #   # command: tail -F anything
  #   ports:
  #     - '8000:80'
  #   environment:
  #     - KAFKA_HOST=kafka:9092

  #   depends_on:
  #     - kafka
  #     - zookeeper
  #     - db


# Use root/example as user/password credentials
  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
    - '27017:27017'
    volumes:
      - mongodb_data:/data/db

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
  ms_lis:
      build:
        context: .
        dockerfile: DockerFile_lis
      environment:
        - KAFKA_BOOTSTRAP_SERVERS=swaproject-kafka-1:9092
        - DB_VERSION=3.8
        - MONGO_HOST=mongo:27017
      depends_on:
            kafka:
              condition: service_healthy
  ms_profile_app:
      build:
        context: .
        dockerfile: DockerFile_appProfile
      ports:
        - "8002:8000"
      environment:
        - KAFKA_BOOTSTRAP_SERVERS=swaproject-kafka-1:9092
        - DB_VERSION=3.8
        - MONGO_HOST=mongo:27017
      
      depends_on:

        - ms_lis
  ms_module_app:
      build:
        context: .
        dockerfile: DockerFile_appModule
      ports:
        - "8001:8000"
      environment:
        - KAFKA_BOOTSTRAP_SERVERS=swaproject-kafka-1:9092
        - DB_VERSION=3.8
        - MONGO_HOST=mongo:27017
      
      depends_on:

        - ms_lis
volumes:
  mongodb_data:



